#pragma checksum "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d80a9259223f1c5314ca8caf87ca920274ca5326"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Statistics_Index), @"mvc.1.0.view", @"/Views/Statistics/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\_ViewImports.cshtml"
using CuddlyWombat;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\_ViewImports.cshtml"
using CuddlyWombat.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d80a9259223f1c5314ca8caf87ca920274ca5326", @"/Views/Statistics/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ce658bd8f1afafa52e3e4103743f9c1be8072474", @"/Views/_ViewImports.cshtml")]
    public class Views_Statistics_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<CuddlyWombat.ViewModel.StatisticViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
  
    ViewData["Title"] = "Index";
    int itemCounting = 1;
    int menuCounting = 1;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>Statisic</h1>

<div>
    <h2>Items' Statistic</h2>
    <table class=""table"">
        <thead>
            <tr>
                <th>
                    No.
                </th>
                <th>
                    Name
                </th>
                <th>
                    Price<br />per item
                </th>
                <th>
                    Sold<br /> Qty
                </th>
                <th>
                    Remaining<br /> Qty
                </th>
                <th>
                    Generated<br />Revenue
                </th>

            </tr>
        </thead>
        <tbody>
");
#nullable restore
#line 38 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
             foreach (var item in Model.Items)
            {

                var itemSold = 0;


#line default
#line hidden
#nullable disable
            WriteLiteral("                <tr>\r\n                    <td>\r\n                        ");
#nullable restore
#line 45 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(itemCounting);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n                        ");
#nullable restore
#line 48 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(Html.DisplayFor(modelItem => item.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n                        ");
#nullable restore
#line 51 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(Html.DisplayFor(modelItem => item.Price));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n");
#nullable restore
#line 54 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                         foreach (OrderJItem orderItem in item.OrderItems)
                        {

                            if (Nullable.Equals(orderItem.Order, null) == false)
                            {
                                if (orderItem.Order.IsPaid == true)
                                {
                                    itemSold = itemSold + orderItem.ItemsSold;
                                }
                            }

                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                        ");
#nullable restore
#line 66 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(Html.DisplayFor(modelItem => itemSold));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n                        ");
#nullable restore
#line 69 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(Html.DisplayFor(modelItem => item.Quantity));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n");
#nullable restore
#line 72 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                          
                            var total = itemSold * item.Price;
                        

#line default
#line hidden
#nullable disable
            WriteLiteral("                        ");
#nullable restore
#line 75 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(Html.DisplayFor(modelItem => total));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n\r\n                </tr>\r\n");
#nullable restore
#line 79 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                                itemCounting++;
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        </tbody>
    </table>
</div>

<div>
    <h2>Menus' Statistic</h2>
    <table class=""table"">
        <thead>
            <tr>
                <th>
                    No.
                </th>
                <th>
                    Name
                </th>
                <th>
                    Price<br />per item
                </th>
                <th>
                    Sold<br /> Qty
                </th>
                <th>
                    Remaining<br /> Qty
                </th>
                <th>
                    Generated<br />Revenue
                </th>

            </tr>
        </thead>
        <tbody>
");
#nullable restore
#line 112 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
             foreach (var menu in Model.Menus)
            {

                var menuSold = 0;


#line default
#line hidden
#nullable disable
            WriteLiteral("                <tr>\r\n                    <td>\r\n                        ");
#nullable restore
#line 119 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(menuCounting);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n                        ");
#nullable restore
#line 122 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(Html.DisplayFor(modelItem => menu.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n                        ");
#nullable restore
#line 125 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(Html.DisplayFor(modelItem => menu.Price));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n");
#nullable restore
#line 128 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                         foreach (OrderJMenu orderMenu in menu.OrderMenus)
                        {

                            if (Nullable.Equals(orderMenu.Order, null) == false)
                            {
                                if (orderMenu.Order.IsPaid == true)
                                {
                                    menuSold = menuSold + orderMenu.MenusSold;
                                }
                            }

                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                        ");
#nullable restore
#line 140 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(Html.DisplayFor(modelItem => menuSold));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n                        ");
#nullable restore
#line 143 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(Html.DisplayFor(modelItem => menu.Quantity));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n");
#nullable restore
#line 146 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                          
                            var total = menuSold * menu.Price;
                        

#line default
#line hidden
#nullable disable
            WriteLiteral("                        ");
#nullable restore
#line 149 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(Html.DisplayFor(modelItem => total));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n\r\n                </tr>\r\n");
#nullable restore
#line 153 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                                menuCounting++;
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        </tbody>
    </table>
</div>

<div>
    <h2>Paid Orders</h2>
    <table class=""table"">
        <thead>
            <tr>
                <th>
                    Order's Name
                </th>
                <th>
                    Description
                </th>
                <th>
                    Has
                </th>
                <th>
                    Qty
                </th>
                <th>
                    Price
                </th>
                <th>
                    Total Amount
                </th>

            </tr>
        </thead>
        <tbody>
");
#nullable restore
#line 186 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
             foreach (Order order in Model.Orders)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <tr>\r\n                    <td>\r\n                        ");
#nullable restore
#line 190 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(Html.DisplayFor(i => order.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n\r\n                        ");
#nullable restore
#line 194 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(Html.DisplayFor(i => order.Description));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n");
#nullable restore
#line 197 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                         foreach (OrderJItem orderItem in order.OrderItems)
                        {


                            if (orderItem.ItemsSold > 0)
                            {
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 203 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                           Write(Html.DisplayFor(i => orderItem.Item.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <br />\r\n");
#nullable restore
#line 205 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                            }



                        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 210 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                         foreach (OrderJMenu orderMenu in order.OrderMenus)
                        {

                            if (orderMenu.MenusSold > 0)
                            {
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 215 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                           Write(Html.DisplayFor(i => orderMenu.Menu.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <br />\r\n");
#nullable restore
#line 217 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                            }



                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </td>\r\n\r\n\r\n                    <td>\r\n");
#nullable restore
#line 226 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                         foreach (OrderJItem orderItem in order.OrderItems)
                        {


                            if (orderItem.ItemsSold > 0)
                            {
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 232 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                           Write(Html.DisplayFor(i => orderItem.ItemsSold));

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <br />\r\n");
#nullable restore
#line 234 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                            }



                        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 239 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                         foreach (OrderJMenu orderMenu in order.OrderMenus)
                        {

                            if (orderMenu.MenusSold > 0)
                            {
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 244 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                           Write(Html.DisplayFor(i => orderMenu.MenusSold));

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <br />\r\n");
#nullable restore
#line 246 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                            }



                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n");
#nullable restore
#line 254 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                         foreach (OrderJItem orderItem in order.OrderItems)
                        {


                            if (orderItem.ItemsSold > 0)
                            {
                                var totalByItem = orderItem.ItemsSold * orderItem.Item.Price;
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 261 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                           Write(Html.DisplayFor(i => totalByItem));

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <br />\r\n");
#nullable restore
#line 263 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                            }



                        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 268 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                         foreach (OrderJMenu orderMenu in order.OrderMenus)
                        {

                            if (orderMenu.MenusSold > 0)
                            {
                                var totalByMenu = orderMenu.MenusSold * orderMenu.Menu.Price;
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 274 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                           Write(Html.DisplayFor(i => totalByMenu));

#line default
#line hidden
#nullable disable
#nullable restore
#line 274 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                                                                  ;

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <br />\r\n");
#nullable restore
#line 276 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                            }
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n                        ");
#nullable restore
#line 281 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                   Write(Html.DisplayFor(i => order.AmountDue));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </td>\r\n\r\n                </tr>\r\n");
#nullable restore
#line 285 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"


            }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n        </tbody>\r\n    </table>\r\n    <div>\r\n");
#nullable restore
#line 293 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
          
            var salesByEmployee =
                from order in Model.Orders
                group order by order.Employee into Employee
                select Employee;

        

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        <h2>Sales by employee</h2>
        <table class=""table"">
            <thead>
                <tr>
                    <th>
                        Employee's Name
                    </th>
                    <th>
                        Number of sales
                    </th>
                    <th>
                        Generated Revenue
                    </th>
                    

                </tr>
            </thead>
            <tbody>
");
#nullable restore
#line 318 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                 foreach (var sale in salesByEmployee)
                {




#line default
#line hidden
#nullable disable
            WriteLiteral("                    <tr>\r\n                        <td>\r\n                           ");
#nullable restore
#line 325 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                      Write(Html.DisplayFor(i => sale.Key));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        <td>\r\n");
#nullable restore
#line 328 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                              
                                int count = 0;
                                foreach (var saleRecord in sale)
                                {
                                    count = count + 1;
                                }
                            

#line default
#line hidden
#nullable disable
            WriteLiteral("                            ");
#nullable restore
#line 335 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                       Write(Html.DisplayFor(modelItem => count));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        <td>\r\n");
#nullable restore
#line 338 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                              
                                double totalRevenue = 0;
                                foreach (var saleRecord in sale) {
                                    totalRevenue = totalRevenue + saleRecord.AmountDue;
                                }
                            

#line default
#line hidden
#nullable disable
            WriteLiteral("                            ");
#nullable restore
#line 344 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                       Write(Html.DisplayFor(modelItem => totalRevenue));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        \r\n                           \r\n\r\n                    </tr>\r\n");
#nullable restore
#line 350 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Statistics\Index.cshtml"
                    menuCounting++;
                }

#line default
#line hidden
#nullable disable
            WriteLiteral("            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<CuddlyWombat.ViewModel.StatisticViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
