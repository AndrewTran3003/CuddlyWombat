#pragma checksum "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d300f0f80d400f8f7bf0e485291ccf174578fbb5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Payments_Index), @"mvc.1.0.view", @"/Views/Payments/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\_ViewImports.cshtml"
using CuddlyWombat;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\_ViewImports.cshtml"
using CuddlyWombat.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d300f0f80d400f8f7bf0e485291ccf174578fbb5", @"/Views/Payments/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ce658bd8f1afafa52e3e4103743f9c1be8072474", @"/Views/_ViewImports.cshtml")]
    public class Views_Payments_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<CuddlyWombat.ViewModel.PaymentViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
  
    ViewData["Title"] = "Payment";
    int paymentNumber = 1;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>Payment</h1>

<hr />
<div class=""row"">

    <div class=""col-5"">
        <h2>Orders</h2>
        <table class=""col-12"">
            <thead>
                <tr class=""row col-12 table-active"">
                    <th scope=""col"" class=""col-1"">
                        No
                    </th>
                    <th scope=""col"" class=""col-4"">
                        Order's Name
                    </th>
                    <th scope=""col"" class=""col-3"">
                        Order For
                    </th>
                    <th scope=""col"" class=""col-2"">
                        Total
                    </th>

                    <th class=""col-2"">

                    </th>

                </tr>
            </thead>
            <tbody>
");
#nullable restore
#line 38 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                  
                    foreach (Order order in Model.Orders)
                    {
                        if (order.OrderType == "Takeaway")
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr class=\"row col-12 table-warning \">\r\n                                <td class=\"col-1\">\r\n                                    ");
#nullable restore
#line 45 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                               Write(paymentNumber);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                </td>\r\n                                <td class=\"col-4\">\r\n                                    ");
#nullable restore
#line 48 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                               Write(Html.DisplayFor(i => order.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                </td>\r\n                                <td class=\"col-3\">\r\n                                    ");
#nullable restore
#line 51 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                               Write(Html.DisplayFor(i => order.CustomerName));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                </td>\r\n                                <td class=\"col-2\">\r\n                                    ");
#nullable restore
#line 54 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                               Write(Html.DisplayFor(i => order.AmountDue));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                </td>\r\n\r\n                                <th class=\"col-2\">\r\n                                    <button type=\"button\" class=\"btn btn-info\"");
            BeginWriteAttribute("onclick", " onclick=\"", 1947, "\"", 1995, 3);
            WriteAttributeValue("", 1957, "GetOrderDetail(\'", 1957, 16, true);
#nullable restore
#line 58 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
WriteAttributeValue("", 1973, order.ID.ToString(), 1973, 20, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 1993, "\')", 1993, 2, true);
            EndWriteAttribute();
            WriteLiteral(">Info</button>\r\n                                </th>\r\n\r\n                            </tr>\r\n");
#nullable restore
#line 62 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"

                        }
                        else
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr class=\"row col-12\">\r\n                                <td class=\"col-1\">\r\n                                    ");
#nullable restore
#line 68 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                               Write(paymentNumber);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                </td>\r\n                                <td class=\"col-4\">\r\n                                    ");
#nullable restore
#line 71 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                               Write(Html.DisplayFor(i => order.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                </td>\r\n                                <td class=\"col-3\">\r\n                                    ");
#nullable restore
#line 74 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                               Write(Html.DisplayFor(i => order.CustomerName));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                </td>\r\n                                <td class=\"col-2\">\r\n                                    ");
#nullable restore
#line 77 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                               Write(Html.DisplayFor(i => order.AmountDue));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                </td>\r\n\r\n                                <th class=\"col-2\">\r\n                                    <button type=\"button\" class=\"btn btn-info\"");
            BeginWriteAttribute("onclick", " onclick=\"", 3001, "\"", 3049, 3);
            WriteAttributeValue("", 3011, "GetOrderDetail(\'", 3011, 16, true);
#nullable restore
#line 81 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
WriteAttributeValue("", 3027, order.ID.ToString(), 3027, 20, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 3047, "\')", 3047, 2, true);
            EndWriteAttribute();
            WriteLiteral(">Info</button>\r\n                                </th>\r\n                            </tr>\r\n");
#nullable restore
#line 84 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"

                        }



                        paymentNumber++;
                    }


                

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div class=\"col-7\">\r\n        <h2>Details</h2>\r\n");
#nullable restore
#line 101 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
         if (Model.ActiveOrder != null)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"            <table class=""col-12"">
                <thead>
                    <tr class=""row col-12 table-primary"">
                        <th class=""col-3"" scope=""col"">
                            Order's Name
                        </th>
                        <th class=""col-3"" scope=""col"">
                            Description
                        </th>
                        <th class=""col-4"" scope=""col"">
                            Has
                        </th>
                        <th class=""col-1"" scope=""col"">
                            Qty
                        </th>
                        <th class=""col-1"" scope=""col"">
                            Price
                        </th>

                    </tr>
                </thead>
                <tbody>
                    <tr class=""row col-12 "">
                        <td class=""col-3"" scope=""col"">
                            ");
#nullable restore
#line 127 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                       Write(Html.DisplayFor(i => i.ActiveOrder.Order.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        <td class=\"col-3\" scope=\"col\">\r\n\r\n                            ");
#nullable restore
#line 131 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                       Write(Html.DisplayFor(i => i.ActiveOrder.Order.Description));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        <td class=\"col-4\" scope=\"col\">\r\n");
#nullable restore
#line 134 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                             foreach (Item item in Model.ActiveOrder.Items)
                            {
                                var orderItems = item.OrderItems;
                                foreach (OrderJItem oi in orderItems.Where(i => i.OrderID == Model.ActiveOrder.Order.ID))
                                {
                                    if (oi.ItemsSold > 0)
                                    {
                                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 141 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                   Write(Html.DisplayFor(i => oi.Item.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <br />\r\n");
#nullable restore
#line 143 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                    }

                                }

                            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 148 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                             foreach (Menu menu in Model.ActiveOrder.Menus)
                            {
                                var orderMenus = menu.OrderMenus;
                                foreach (OrderJMenu om in orderMenus.Where(i => i.OrderID == Model.ActiveOrder.Order.ID))
                                {
                                    if (om.MenusSold > 0)
                                    {
                                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 155 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                   Write(Html.DisplayFor(i => om.Menu.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <br />\r\n");
#nullable restore
#line 157 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                    }

                                }

                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("                        </td>\r\n\r\n\r\n                        <td class=\"col-1\" scope=\"col\">\r\n");
#nullable restore
#line 166 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                             foreach (Item item in Model.ActiveOrder.Items)
                            {
                                var orderItems = item.OrderItems;
                                foreach (OrderJItem oi in orderItems.Where(i => i.OrderID == Model.ActiveOrder.Order.ID))
                                {
                                    if (oi.ItemsSold > 0)
                                    {
                                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 173 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                   Write(Html.DisplayFor(i => oi.ItemsSold));

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <br />\r\n");
#nullable restore
#line 175 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                    }

                                }

                            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 180 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                             foreach (Menu menu in Model.ActiveOrder.Menus)
                            {
                                var orderMenus = menu.OrderMenus;
                                foreach (OrderJMenu om in orderMenus.Where(i => i.OrderID == Model.ActiveOrder.Order.ID))
                                {
                                    if (om.MenusSold > 0)
                                    {
                                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 187 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                   Write(Html.DisplayFor(i => om.MenusSold));

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <br />\r\n");
#nullable restore
#line 189 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                    }

                                }

                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("                        </td>\r\n                        <td class=\"col-1\" scope=\"col\">\r\n");
#nullable restore
#line 196 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                             foreach (Item item in Model.ActiveOrder.Items)
                            {
                                var orderItems = item.OrderItems;
                                foreach (OrderJItem oi in orderItems.Where(i => i.OrderID == Model.ActiveOrder.Order.ID))
                                {
                                    if (oi.ItemsSold > 0)
                                    {
                                        var totalByItem = oi.ItemsSold * oi.Item.Price;
                                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 204 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                   Write(Html.DisplayFor(i => totalByItem));

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <br />\r\n");
#nullable restore
#line 206 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                    }

                                }

                            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 211 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                             foreach (Menu menu in Model.ActiveOrder.Menus)
                            {
                                var orderMenus = menu.OrderMenus;
                                foreach (OrderJMenu om in orderMenus.Where(i => i.OrderID == Model.ActiveOrder.Order.ID))
                                {
                                    if (om.MenusSold > 0)
                                    {
                                        var totalByMenu = om.MenusSold * om.Menu.Price;
                                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 219 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                   Write(Html.DisplayFor(i => totalByMenu));

#line default
#line hidden
#nullable disable
#nullable restore
#line 219 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                                                          ;

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <br />\r\n");
#nullable restore
#line 221 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                    }

                                }

                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        </td>

                    </tr>
                    <tr class=""row col-12 "">
                        <td class=""col-11"">
                            Total Amount
                        </td>
                        <td class=""col-1"">
                            ");
#nullable restore
#line 234 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                       Write(Html.DisplayFor(i => Model.ActiveOrder.Order.AmountDue));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                        </td>
                    </tr>

                </tbody>
            </table>
            <div class=""row col-12 "">

                <button class=""btn btn-danger col-3"" data-toggle=""modal"" data-target=""#deleteModal"">
                    Delete Order
                </button>

                <div class=""col-1"">

                </div>
                <button class=""btn btn-warning col-3""");
            BeginWriteAttribute("onclick", " onclick=\"", 9809, "\"", 9870, 4);
            WriteAttributeValue("", 9819, "HandleAction(\'", 9819, 14, true);
#nullable restore
#line 249 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
WriteAttributeValue("", 9833, Model.ActiveOrder.Order.ID, 9833, 27, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 9860, "\',", 9860, 2, true);
            WriteAttributeValue(" ", 9862, "\'Edit\')", 9863, 8, true);
            EndWriteAttribute();
            WriteLiteral(">\r\n                    Edit\r\n                </button>\r\n                <div class=\"col-1\">\r\n\r\n                </div>\r\n\r\n                <button class=\"btn btn-success col-3\"");
            BeginWriteAttribute("onclick", " onclick=\"", 10045, "\"", 10105, 4);
            WriteAttributeValue("", 10055, "HandleAction(\'", 10055, 14, true);
#nullable restore
#line 256 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
WriteAttributeValue("", 10069, Model.ActiveOrder.Order.ID, 10069, 27, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 10096, "\',", 10096, 2, true);
            WriteAttributeValue(" ", 10098, "\'Pay\')", 10099, 7, true);
            EndWriteAttribute();
            WriteLiteral(@">
                    Pay
                </button>





            </div>
            <div class=""modal fade"" id=""deleteModal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
                <div class=""modal-dialog"" role=""document"">
                    <div class=""modal-content"">
                        <div class=""modal-header"">
                            <h5 class=""modal-title"">Delete This Order</h5>
                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                <span aria-hidden=""true"">&times;</span>
                            </button>
                        </div>
                        <div class=""modal-body"">
                            <p>Are you sure you want to delete this order?</p>
                        </div>
                        <div class=""modal-footer"">
                            <button type=""button"" class=""btn btn-danger""");
            BeginWriteAttribute("onclick", " onclick=\"", 11066, "\"", 11129, 4);
            WriteAttributeValue("", 11076, "HandleAction(\'", 11076, 14, true);
#nullable restore
#line 278 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
WriteAttributeValue("", 11090, Model.ActiveOrder.Order.ID, 11090, 27, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 11117, "\',", 11117, 2, true);
            WriteAttributeValue(" ", 11119, "\'Delete\')", 11120, 10, true);
            EndWriteAttribute();
            WriteLiteral(@">Delete</button>
                            <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""modal fade"" id=""paymenSuccessModal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
                <div class=""modal-dialog"" role=""document"">
                    <div class=""modal-content"">
                        <div class=""modal-header"">
                            <h5 class=""modal-title"">Payment Successful!</h5>
                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                <span aria-hidden=""true"">&times;</span>
                            </button>
                        </div>
                        <div class=""modal-body"">
                            <p>Would you like to print a receipt?</p>
                        </div>
                        <div class=""mo");
            WriteLiteral(@"dal-footer"">
                            <button type=""button"" class=""btn btn-success"">Yes</button>
                            <button type=""button"" class=""btn btn-secondary"" onclick=""HandleSuccessfulPayment('Close')"">Close</button>
                        </div>
                    </div>
                </div>
            </div>
");
#nullable restore
#line 303 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"

        }
        else
        {
            string Text = "Click on the 'Info' buttons to process orders";
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 308 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
       Write(Html.DisplayFor(i => Text));

#line default
#line hidden
#nullable disable
#nullable restore
#line 308 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                                       


        }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n    </div>\r\n</div>\r\n<script>\r\n    function GetOrderDetail(orderID) {\r\n        var url = \'");
#nullable restore
#line 318 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
              Write(Url.Action("Index","Payments"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\';\r\n        url = url + \"?orderID=\" + orderID;\r\n        window.location.replace(url);\r\n\r\n    }\r\n\r\n    function HandleAction(orderID, action) {\r\n        var url = \'");
#nullable restore
#line 325 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
              Write(Url.Action("HandleAction", "Payments"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\';\r\n        var data =\r\n        {\r\n            OrderID: orderID,\r\n            Action: action\r\n        };\r\n\r\n        $.post(url, data, function (response) {\r\n            var nextUrl = \"\";\r\n            if (response == \"Edit\") {\r\n                nextUrl = \'");
#nullable restore
#line 335 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                      Write(Url.Action("Create", "Orders"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\';\r\n                nextUrl = nextUrl + \"?orderID=\" + orderID;\r\n                window.location.replace(nextUrl);\r\n            }\r\n            else if (response == \"Deleted\") {\r\n                nextUrl = \'");
#nullable restore
#line 340 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                      Write(Url.Action("Index","Payments"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
                window.location.replace(nextUrl);
            }
            else if (response == ""Paid"") {
                $(""#paymenSuccessModal"").modal();

            }
        });

    }
    function HandleSuccessfulPayment(action) {
        if (action == ""Close"") {
            var url = '");
#nullable restore
#line 352 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
                  Write(Url.Action("Index", "Payments"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\';\r\n            window.location.replace(url);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n</script>\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n");
#nullable restore
#line 362 "C:\Side Projects\CuddlyWombat\CuddlyWombat\Views\Payments\Index.cshtml"
      await Html.RenderPartialAsync("_ValidationScriptsPartial");

#line default
#line hidden
#nullable disable
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<CuddlyWombat.ViewModel.PaymentViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
